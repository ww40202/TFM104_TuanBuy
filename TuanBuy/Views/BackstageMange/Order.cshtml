


<link rel="stylesheet" href="~/css/bootstrap.min.css" type="text/css">
<link rel="stylesheet" href="~/css/font-awesome.min.css" type="text/css">
<link rel="stylesheet" href="~/css/style.css" type="text/css">
<link rel="stylesheet" href="~/css/mystyle.css">
<link rel="stylesheet" href="~/css/back.css">
<script src="~/js/vue.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<div class="container" id="app">

    <div class="row">
        <div class="ordertitle">訂單管理</div>
        <div class="search1">
            <div class="form-group has-search">
                <span class="fa fa-search form-control-feedback"></span>
                <input type="text" class="form-control" placeholder="Search" v-model="search"> 
        </div>
        <table class="table table-striped col-gl-12 dropdown table-hover">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">訂單編號</th>
                    <th scope="col">客戶ID</th>
                    <th scope="col">商品名稱</th>
                    <th scope="col">付款方式</th>
                    <th scope="col">訂單日期</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                <!--分頁設定-->
                <tr v-for="item in ordermanages.slice(pageStart, pageStart + countOfPage)">
                    <th scope="row">{{item.orderId}}</th>
                    <td>{{item.userName}}</td>
                    <td>{{item.productName}}</td>
                    <td>{{item.paymentType}}</td>
                    <td>{{item.createDate}}</td>
                    <td>
                        <button type="button" class="btn btn-secondary" v-bind:value="item.orderId"
                                v-on:click="update($event)" data-toggle="modal" data-target="#exampleModal"
                                data-whatever="">
                            修改
                        </button>
                        <button type="button" class="btn btn-danger" v-bind:value="item.orderId"
                                v-on:click="getOrder($event)" data-toggle="modal" data-target="#deleteModal">
                            刪除
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
        <!--分頁-->
        <div class="container">
            <ul class="pagination">
                <li class="page-item" v-bind:class="{'disabled': (currPage === 1)}"
                    @@click.prevent="setPage(currPage-1)"><a class="page-link" href="#">Previous</a></li>
                <li v-for="n in totalPage"
                    v-bind:class="{'active': (currPage === (n))}"
                    @@click.prevent="setPage(n)"><a class="page-link" href="#">{{n}}</a></li>
                <li class="page-item" v-bind:class="{'disabled': (currPage === totalPage)}"
                    @@click.prevent="setPage(currPage+1)"><a class="page-link" href="#">Next</a></li>
            </ul>
        </div>

        <!--修改使用者的對話盒-->
        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content" style="width:850px;margin-left:-160px;margin-top:80px">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">修改訂單資料</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!--綁定form表單資料-->
                        <table class="table table-striped col-gl-12 dropdown">
                            <thead>
                                <tr>
                                    <th class="orderitem" scope="col">訂單編號</th>
                                    <th class="orderitem" scope="col">商品名稱</th>
                                    <th class="orderitem" scope="col">數量</th>
                                    <th class="orderitem1" scope="col">金額</th>
                                    <th class="orderitem1" scope="col">地址</th>
                                    <th class="orderitem1" scope="col">電話</th>

                                </tr>
                            </thead>
                            <tbody>
                                <tr v-if="ordermanage.Disable!==false">
                                    <th scope="row">{{ordermanage.orderId}}</th>
                                    <th>{{ordermanage.productName}}</th>
                                    <th>{{ordermanage.count}}</th>
                                    <th>{{ordermanage.price}}</th>
                                    <th><input style="width:300px" v-model="ordermanage.address" /></th>
                                    <th><input style="width:110px" v-model="ordermanage.phone" /></th>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <h3>總價:{{ordermanage.count*ordermanage.price}}NTD</h3>
                        <button type="button" class="btn btn-secondary"
                                data-dismiss="modal">
                            取消
                        </button>
                        <!--觸發事件修改-->
                        <button type="button" class="btn btn-ddd" v-on:click="readyUpdate(event)">確認修改</button>
                    </div>
                </div>
            </div>
        </div>

        <!--刪除使用者的對話盒-->
        <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">刪除使用者</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        確定刪除?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary"
                                data-dismiss="modal">
                            取消
                        </button>
                        <!--按下按鈕觸發刪除的API-->
                        <button type="button" class="btn btn-ddd" v-on:click="deleteUser">刪除</button>
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>

<script>
    var app = new Vue({
        el: "#app",
        data: {
            ordermanagesearch:[],
            ordermanages: [],
            ordermanage: {
                orderId: '',
                userName: '',
                createDate: '',       //接後端資料傳到物件丟到[]
                productName: '',
                count: '',
                address: '',
                phone: '',
                paymentType: '',
                price: ''
            },
            search: '',
            target: null,
            currPage: 1,                //起始頁設定
            countOfPage: 3              //每頁要幾筆
        },
        //設定分頁
        computed: {
            pageStart: function () {
                return (this.currPage - 1) * this.countOfPage;                 //當前頁面的起始筆數
            },
            totalPage: function () {
                return Math.ceil(this.ordermanages.length / this.countOfPage);  //陣列長度除以每頁設定的筆數
            },

        },
        methods: {
            update: function (e) {
                let self = this;
                let orderId = e.target.value;
                let target = self.ordermanages.find(i => { return orderId == i.orderId });
                self.ordermanage = target;
            },
            getOrder: function (e) {
                let self = this;
                self.target = e.target.value;
            },
            readyUpdate: function () {
                let self = this;
                //發送PUT請求到API修改資料
                axios.put("/BackstageMange/UpdateOrder/", self.ordermanage)
                    .then((resp) => alert("更新成功"))
                    .catch((res) => console.log(res.response.data));
                window.location.reload();

            },
            deleteUser: function () {
                let self = this;
                axios.delete("/BackstageMange/DeleteOrder/" + self.target)
                    .then((res) => {

                        console.log(res);
                    })
                    .catch((res) => console.log(res.response.data));
                console.log("/BackstageMange/DeleteOrder/" + self.target);
                /* window.location.reload();*/
            },
            setPage: function (idx) {
                if (idx <= 0 || idx > this.totalPage) {       //限制頁數
                    return;
                }
                this.currPage = idx;
            },
            ordermanages: function () {
                var search = this.search;                                 //收尋

                if (search) {
                    return this.ordermanages.filter(function(ordermanage) {
                        return Object.keys(ordermanage).some(function(key) {
                            return String(ordermanage[key]).toLowerCase().indexOf(search) > -1;
                        });
                    });
                }

                return this.ordermanage;
            }
        
        },
        mounted: function () {
            let self = this;
            axios.get("/BackstageMange/TestJoin")
                .then((resp) => {
                    self.ordermanages = resp.data;
                    console.log(self.ordermanages);
                })
                .catch((res) => {
                    console.log("錯誤訊息");
                    console.log(res.response.data);
                });
        }
    })

</script>
