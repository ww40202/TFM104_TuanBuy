<body class="colerwhite">
    <!-- 新增商品 -->
    <div class="container" id="form1">
        <div class="row">
            <h2 class="col-12 addh2">開團</h2>
            <div class="col-12 addborder">
                <label class="addp" for="name">使用者名稱</label>
                <input class="addtext" type="text" name="" id="name" readonly="" v-model="user.name">

                <label class="addp" for="email">電子信箱</label>
                <input class="addtext" type="text" name="" id="email" readonly="" v-model="user.email">

                <!--商品名稱-->
                <label class="addp" for="productname">商品名稱</label>
                <input class="addtext" type="text" name="" id="productname" v-model="product.name">

                <!--結束時間-->
                <label class="addp" for="endtime">結束時間</label>
                <input class="addtext" type="date" name="" id="endtime" v-model="product.endTime">

                <label class="addp" for="target">目標金額</label>
                <input class="addtext" type="text" name="" id="target" placeholder="NTD" v-model="product.total">

                <!--類別-->
                <label class="addp" for="category">類別</label>
                <select class="addselect addimg" name="category" id="category" v-model="product.category">
                    <option value="未分類">選擇計畫分類</option>
                    <option value="票卷">票券</option>
                    <option value="食品">食品</option>
                    <option value="衣服">衣服</option>
                    <option value="3C">3C</option>
                </select>

                <!--商品簡介-->
                <label class="addp" for="productdetail">商品簡介</label>
                <input class="addtext" type="text" name="" id="productdetail" v-model="product.description">

                <!--商品內容-->
                <label class="addp" for="productcontent">商品內容</label>
                <input class="addtext" type="text" name="" id="productcontent" v-model="product.content">

                <!--商品單價-->
                <label class="addp" for="productprice">商品單價</label>
                <input class="addtext" type="text" name="" id="productprice" v-model="product.price">


                <label class="addp" for="picPath">上傳圖片</label>
                <input class="addimg" type="file" id="picPath" accept="image/*" multiple v-on:change="previewMultiImage">
                <template v-if="preview_list.length">
                    <div v-for="item, index in preview_list" v-bind:key="index">
                        <img v-bind:src="item" class="img-fluid" width="200" height="200" />
                        <p class="mb-0">file name: {{ image_list[index].name }}</p>
                        <p>size: {{ image_list[index].size/1024 }}KB</p>
                    </div>
                </template>

                <a class="addbtn" href="#" v-on:click="addProduct">刊登</a>
            </div>
        </div>
    </div>
    <!-- 新增商品結束 -->

</body>
  

<script>
    var app = new Vue({
        el: "#form1",
        data: {
            product: {
                name:"商品",
                price:300,
                description:"描述",
                content:"內容",
                picPath:[ ],
                category:"商品種類",
                endTime:null,
                total:1000
            },
            user: {
                name: "",
                email:""
            },
            preview:null,
            image: null,
            preview_list: [],
            image_list: []
        },
        methods: {
            up: function (event) {
                console.log(event);
                //this.product.picPath = event.target.files[0];
                this.product.picPath = event.target.files;
                var input = event.target;
                if (input.files) {
                    var reader = new FileReader();
                    reader.onload = (e) => {
                        this.preview = e.target.result;
                    }
                    this.image = input.files[0];
                    reader.readAsDataURL(input.files[0]);
                }
                alert("上傳成功");
            },
            previewMultiImage: function(event) {
                this.product.picPath = event.target.files;
                var input = event.target;
                var count = input.files.length;
                var index = 0;
                if (input.files) {
                    while(count --) {
                        var reader = new FileReader();
                        reader.onload = (e) => {
                            this.preview_list.push(e.target.result);
                        }
                        this.image_list.push(input.files[index]);
                        reader.readAsDataURL(input.files[index]);
                        index ++;
                    }
                }
            },
            addProduct:function() {
                var bodyFormData = new FormData();
                bodyFormData.append("Name", this.product.name);
                bodyFormData.append("Price", this.product.price);
                bodyFormData.append("Content", this.product.content);
                bodyFormData.append("Description", this.product.description);
                for(let i =0; i <  this.product.picPath.length; i++) {
                    bodyFormData.append("PicPath", this.product.picPath[i]);
                }
                bodyFormData.append("Category", this.product.category);
                bodyFormData.append("EndTime", this.product.endTime);
                bodyFormData.append("Total", this.product.total);

                console.log(bodyFormData);
                axios({
                        method: "post",
                        url: "/Product/PostProduct",
                        data: bodyFormData,
                        headers: { "Content-Type": "multipart/form-data" }
                    })
                    .then((resp) => {
                        Swal.fire(
                            '刊登成功！',
                            '會員中心可供您修改商品',
                            'success'
                        ).then((result) => {document.location.href = "/home/index";});
                    })
                    .catch((resp) => alert(resp.response.data));
            }
        },
        mounted:function() {
            let self = this;
            axios.get("/api/MemberCenter/").then((resp) => { this.user = resp.data });
        }
    });
</script>