<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Tuan Buy">
    <meta name="keywords" content="Tuan Buy, creative, html">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Tuan Buy</title>
</head>

<body>
    <div class="container colerwhite mtb2rem" id="app">
        <div class="row">
            <div class="col-12 checkfont">結帳</div>

            <p class="display col-6 checkmg-15rem">訂單商品</p>
            <p class="display col-1 checkmg-1">單價</p>
            <p class="display col-1 checkmg-2">數量</p>
            <p class="display col-1 checkmg-3">統計</p>
            <p class="display col-1 checkmg-4">操作</p>

            <div class="col-lg-12">
                <p>
                </p>
            </div>
            <!-- 商品格式 -->
            <div class="dasdP" v-for="(item,index) in productShoppings">
                <input class="col-1 checkpointdiv checkpoint" type="checkbox" name="c" :value="item.productId" v-model="checkProduct">
                <img class="col-1 checkimg" :src="item.productPicPath" alt="商品圖">
                <p class="checkproduct col-5">
                    {{item.productDescription}}
                </p>
                <p class="col-1 checauto">${{item.productPrice}}</p>
                <div class="col-2 checauto">
                    <span class="stepper">
                        <button v-on:click="item.productCount -= 1">–</button>
                        <span v-if="item.productCount<=0">
                            <input class="checkinputnumber" type="number" id="stepper" :value="item.productCount=0" min="0" max="100" step="1" readonly>
                        </span>
                        <input class="checkinputnumber" type="number" id="stepper" :value="item.productCount" v-else min="0" max="100" step="1" readonly>
                        <button v-on:click="item.productCount += 1">+</button>
                    </span>
                </div>
                <p class="col-1 checauto checkcolor">${{productShoppingSum(index)}}</p>
                <button class="col-1 checauto checkdelbtn" v-on:click="DeleteProduct(item.productId)">刪除</button>
            </div>
            <!-- 商品格式 從這段結束複製 -->
            <div class="col-12 gprdground"></div>
            <div class="col-6 display">
                <div>留言</div>
<textarea class="checktextarea" name="" id="" cols="30" rows="10"
          placeholder="統一編號 / 管理室代收 / 電話聯絡時間..." v-model="buyerData.buyerRemark"></textarea>
            </div>
            <div class="col-6 display">
                <div>姓名</div>
                <p class="checktext">
                    <input v-model="buyerData.buyerName" />
                </p>
                <div>電話</div>
                <p class="checktext">
                    <input v-model="buyerData.buyerPhone" />
                </p>
                <div>宅配地址</div>
                <p class="checktext">
                    <input v-model="buyerData.buyerAddress" />
                </p>
            </div>


            <div class="col-12 gprdground"></div>


            <div class="col-12">
                <span class="checkfont checkright">付款方式</span>
                <button class="checkpaystylebtn" v-for="(item,index) in PayType" v-on:click="checkPayType(index)">{{ item.name }}</button>

            </div>

            <div class="col-12 checkend checkmgbot">
                <div class="checkmgright">團購折價券</div>
                <!-- 修改 -->
                <button type="button" class="btn check-ddd" data-toggle="modal" data-target="#exampleModal"
                        data-whatever="選擇折價券">
                    選擇折價券
                </button>

                <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog"
                     aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">選擇折價券</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <form>
                                    <div class="checkcostdiv">
                                        <span>新增折價券</span>
                                        <input class="checkcosttext" type="text">
                                        <button class="checktextbtn">使用</button>
                                    </div>
                                    <div class="checkchosediv">
                                        <img src="https://beautiful666.com/images/10/2s.jpg" alt="折價券" width="100" height="100">
                                        <p class="checkchosep">折價券內容折折價券內容折折價券內容折折價券內容折折價券內容折折價折價券內容折折價券內容折折價券內容折折價券內容折折價券內容折券內容折折價券內容折</p>
                                        <input class="checkcheckbox" type="checkbox" name="" id="">
                                    </div>
                                    <!-- 複製 -->
                                    <div class="checkchosediv">
                                        <img src="https://beautiful666.com/images/10/2s.jpg" alt="折價券" width="100" height="100">
                                        <p class="checkchosep">折價券內容折折價券內容折折價券內容折折價券內容折折價券內容折折價折價券內容折折價券內容折折價券內容折折價券內容折折價券內容折券內容折折價券內容折</p>
                                        <input class="checkcheckbox" type="checkbox" name="" id="">
                                    </div>
                                    <!-- 複製 -->
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
                                <button type="button" class="btn checkokbtn">選擇</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- 折價券結束 -->
            </div>
            <div class="col-12 checkend">
                <div class="purchaseorder">總付款金額</div>
                <span class="purchaseallmoney">${{productshoppingAddSum}}</span>
            </div>
            <div class="col-12 checkend checkmgbot">
                <button class="purchasebtn purchasebuybtnsize" v-on:click="AddOrder()">下訂單</button>
            </div>
        </div>
    </div>
    <form id="form1" action="/Bank/SpgatewayPayBill" method="post" hidden="hidden">
        <p><input name="ordernumber" id="ordernumber" type="text" /></p>
        <p><input name="amount" id="amount" type="number" /></p>
        <p><input name="PayMethod" id="PayMethod" type="text" /></p>
        <p><button type="submit" value="插入" id="send" /></p>
        <p><div id="success"></div></p>
    </form>
</body>
</html>
<script>
    //產品相關資訊
    class ProductShopping {
        productId = null;
        productDescription = null;
        productPicPath = null;
        productPrice = 0;
        productCount = 1;
    }
    //購買買家資訊
    class BuyerData {
        buyerId = null;
        buyerName = null;
        buyerPhone = null;
        buyerAddress = null;
        buyerRemark = null;
    }
    var app = new Vue({
        el: "#app",
        data: {
            buyerData: new BuyerData(),
            productShopping: new ProductShopping(),
            productShoppings: [],
            productshoppingAddSum: 0,
            PayType: [
                { id: 0, name: "信用卡付款" },
                { id: 1, name: "銀行轉帳" },
            ],
            //買家付款方式
            checkPayFun: null,
            //勾選想要購買的商品編號
            checkProduct: [],
            //勾選確認購買的相關商品資訊
            checkProductResult :[],
        },
        methods: {
            DeleteProduct: function (e) {
                delete app.productShoppings.find(x => x.productId == e);
                $.ajax({
                    type: "POST",
                    url: "/Product/DelectShoppingCart",
                    data: { productId: e },
                    success: function (response) {
                        //刪除購物車商品
                        for (var i = 0; i < app.productShoppings.length; i++) {
                            if (app.productShoppings[i].productId == e) {
                                app.productShoppings.splice(i, 1);
                            }
                        }
                    },
                    error: function (response) {
                        alert(response);
                    }
                });

            },

            AddOrder: function () {
                if (app.checkPayFun != null && app.checkProduct.length>0) {
                    $.ajax({
                        type: "POST",
                        url: "/Product/AddOrder",
                        data: {
                            OrderDescription: app.buyerData.buyerRemark,
                            BuyerAddress: app.buyerData.buyerAddress,
                            Phone: app.buyerData.buyerPhone,
                            BuyerId: app.buyerData.buyerId,
                            PaymentType: app.checkPayFun,
                            ProductId: app.checkProduct,
                            shoppingCartViewModels: app.checkProductResult
                        },
                        success: function (response) {
                            document.getElementById('ordernumber').value = response.ordernumber;
                            document.getElementById('amount').value = response.amount;
                            document.getElementById('PayMethod').value = response.payMethod;
                            var btn = document.getElementById('send');
                            btn.click();
                        },
                        error: function (response) {
                            alert(response);
                        }
                    });
                }
                else {
                    alert('尚未選擇商品或是選擇付款方式')
                }
            },

            checkPayType: function (index) {
                app.checkPayFun = index;
            }
        },
        mounted: function () {
            axios.get("/Product/GetUserShoppingCart/").then((resp) => {
                for (let i = 0; i < resp.data.length; i++) {
                    var shoppingObject = new ProductShopping();
                    app.buyerData.buyerId = resp.data[i].buyerId;
                    app.buyerData.buyerName = resp.data[i].buyerName;
                    app.buyerData.buyerPhone = resp.data[i].buyerPhone;
                    app.buyerData.buyerAddress = resp.data[i].buyerAddress;
                    shoppingObject.productDescription = resp.data[i].productDescription;
                    shoppingObject.productId = resp.data[i].productId;
                    shoppingObject.productPicPath = '/ProductPicture/' + resp.data[i].productPicPath;
                    shoppingObject.productPrice = resp.data[i].productPrice;
                    app.productShoppings.push(shoppingObject);
                }
            })
        },
        watch: {
            /*監聽所有商品總共款金額*/
            productShoppings: { // 深度監聽
                handler(val, oldVal) {
                    app.productshoppingAddSum = 0;
                    for (let x = 0; x < app.checkProduct.length; x++) {
                        //目前選擇的產品項目
                        let prd = app.checkProduct[x];
                        //尋找所有購物車商品中有勾選的商品
                        let result = app.productShoppings.find(x => x.productId == prd);
                        app.productshoppingAddSum += (result.productPrice * result.productCount);
                    }
                }, deep: true
            },
            //找出目前勾選的產品商品總額
            checkProduct: {
                handler(val, oldVal) {
                    app.checkProductResult = [];
                    app.productshoppingAddSum = 0;
                    let sum = 0;
                    for (let i = 0; i < val.length; i++) {
                        let result = app.productShoppings.find(x => x.productId == val[i]);
                        //將選擇的商品相關資訊加入到陣列
                        app.checkProductResult.push(result);
                        sum = result.productCount * result.productPrice;
                        app.productshoppingAddSum += sum;
                        sum = 0;
                    }
                    console.log(app.checkProductResult);
                }, deep: true
            }

        },
        computed: {
            //計算商品單價總額
            productShoppingSum: function () {
                return (index) => {
                    return app.productShoppings[index].productPrice * app.productShoppings[index].productCount
                }
                /*return app.productShoppings[index].productPrice * app.productShoppings[index].productCount;*/
            },
        },
    });
</script>


<script>
    var inc = document.getElementsByClassName("stepper");
    for (i = 0; i < inc.length; i++) {
        var incI = inc[i].querySelector("input"),
            id = incI.getAttribute("id"),
            min = incI.getAttribute("min"),
            max = incI.getAttribute("max"),
            step = incI.getAttribute("step");
        document
            .getElementById(id)
            .previousElementSibling.setAttribute(
                "onclick",
                "stepperInput('" + id + "', -" + step + ", " + min + ")"
            );
        document
            .getElementById(id)
            .nextElementSibling.setAttribute(
                "onclick",
                "stepperInput('" + id + "', " + step + ", " + max + ")"
            );
    }

    function stepperInput(id, s, m) {
        var el = document.getElementById(id);
        if (s > 0) {
            if (parseInt(el.value) < m) {
                el.value = parseInt(el.value) + s;
            }
        } else {
            if (parseInt(el.value) > m) {
                el.value = parseInt(el.value) + s;
            }
        }
    }
</script>